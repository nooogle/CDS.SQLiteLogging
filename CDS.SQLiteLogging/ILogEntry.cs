//using Microsoft.Extensions.Logging;

//namespace CDS.SQLiteLogging;

///// <summary>
///// Represents a basic log entry with essential properties.
///// </summary>
//public interface ILogEntry
//{
//    /// <summary>
//    /// Gets the unique identifier for the log entry. This is automatically generated by the 
//    /// SQLite database when the log entry is inserted.
//    /// </summary>
//    int DbId { get; }


//    /// <summary>
//    /// The category name associated with the logger that created this entry.
//    /// This is typically the fully qualified class name (e.g. "MyApp.Services.OrderService").
//    /// </summary>
//    string Category { get; set; }


//    /// <summary>
//    /// Gets the event ID for the log entry. This is equivalent to the EventId.Id property on the
//    /// Microsoft.Extensions.Logging.EventId type.
//    /// </summary>
//    int EventId { get; set; }


//    /// <summary>
//    /// Gets the name of the event for the log entry. This is equivalent to the EventId.Name property on the
//    /// Microsoft.Extensions.Logging.EventId type.
//    /// </summary>
//    string EventName { get; set; }


//    /// <summary>
//    /// Gets the timestamp when the log entry was created.
//    /// </summary>
//    DateTimeOffset Timestamp { get; set; }

//    /// <summary>
//    /// The log level.
//    /// </summary>
//    LogLevel Level { get; set; }

//    /// <summary>
//    /// Gets the message of the log entry. Use the MsgParams if this is a structured message.
//    /// </summary>
//    string MessageTemplate { get; set; }

//    /// <summary>
//    /// Gets or sets the message parameters for structured logging.
//    /// </summary>
//    IReadOnlyDictionary<string, object> Properties { get; set; }


//    /// <summary>
//    /// Gets/sets the exception information for the log entry. Clients should
//    /// use the SetException and GetExceptionInfo methods to access the exception details.
//    /// This property is intended for serialization purposes only.
//    /// </summary>
//    string ExceptionJson { get; set; }


//    /// <summary>
//    /// Serializes the MsgParams dictionary to a JSON string.
//    /// </summary>
//    /// <returns>A JSON string representing the message parameters.</returns>
//    string SerializeMsgParams();

//    /// <summary>
//    /// Deserializes a JSON string to populate the MsgParams dictionary.
//    /// </summary>
//    /// <param name="json">The JSON string representing the message parameters.</param>
//    void DeserializeMsgParams(string json);
//}
